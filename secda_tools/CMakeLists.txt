add_subdirectory(secda_profiler)
add_subdirectory(secda_integrator)
add_subdirectory(axi_support)
add_subdirectory(secda_utils)
add_subdirectory(ap_sysc)

if(BUILD_ARM)
  use_cross_compiler()

  add_library(secda_toolsv4 STATIC .)
  target_include_directories(secda_toolsv4 PUBLIC)
  target_link_libraries(secda_toolsv4 PUBLIC profiler api_v4 secda_utils)

  add_library(secda_toolsv5 STATIC .)
  target_include_directories(secda_toolsv5 PUBLIC)
  target_link_libraries(secda_toolsv5 PUBLIC profiler api_v5 secda_utils)

  if(BUILD_KRIA)
    add_library(secda_tools_kria STATIC .)
    target_include_directories(secda_tools_kria PUBLIC)
    target_link_libraries(secda_tools_kria PUBLIC profiler api_v5 secda_utils)
  else()
    add_library(secda_tools STATIC .)
    target_include_directories(secda_tools PUBLIC)
    target_link_libraries(secda_tools PUBLIC profiler api_v5 secda_utils)
  endif()
else()
  # use_host_compiler()
  # add_library(secda_tools_sim STATIC . $<TARGET_OBJECTS:secda_integrator>)
  add_library(secda_tools_sim STATIC .)
  target_include_directories(secda_tools_sim PUBLIC ${SYSC_INCLUDES})
  target_link_libraries(secda_tools_sim PUBLIC secda_integrator api_sysc_v2 profiler ap_sysc secda_utils ${SYSC_LIBRARIES})
  target_compile_options(secda_tools_sim PUBLIC -fPIC -DSYSC)

  add_library(secda_tools_simv4 STATIC .)
  target_include_directories(secda_tools_simv4 PUBLIC ${SYSC_INCLUDES})
  target_link_libraries(secda_tools_simv4 PUBLIC secda_integrator api_sysc_v4 profiler ap_sysc secda_utils ${SYSC_LIBRARIES})
  target_compile_options(secda_tools_simv4 PUBLIC -fPIC -DSYSC)

  add_library(secda_tools_simv5 STATIC .)
  target_include_directories(secda_tools_simv5 PUBLIC ${SYSC_INCLUDES})
  target_link_libraries(secda_tools_simv5 PUBLIC secda_integrator api_sysc_v5 profiler ap_sysc secda_utils ${SYSC_LIBRARIES})
  target_compile_options(secda_tools_simv5 PUBLIC -fPIC -DSYSC)
endif()
